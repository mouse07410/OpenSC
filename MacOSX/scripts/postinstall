#!/bin/bash -x


# Provide symlinks for the libraries from /Library/OpenSC/lib to /usr/local/lib
#for f in /Library/OpenSC/*.dylib
#do
#	ln -sf $i /usr/local/lib/
#done
#ln -sf /Library/OpenSC/lib/pkcs11-spy.so /usr/local/lib/

# Usually static library is not built... But if it was built, by all means symlink it...
if [ -e /Library/OpenSC/lib/libopensc.a ]; then
	ln -sf /Library/OpenSC/lib/libopensc.a /usr/local/lib/
fi

# Provide symlinks for man pages
for f in /Library/OpenSC/share/man/man1/*.1
do
	ln -sf $i /usr/local/share/man/man1/
done
for f in /Library/OpenSC/share/man/man5/*.5
do
	ln -sf $i /usr/local/share/man/man5/
done

# Physical copy of the libraries to /usr/local/lib to fix the bug
# in OpenSSH on MacOS that does not allow whitelisting other directories
# (so it refuses to load libraries from /Library/OpenSC, even if they are
# symlink'ed to /usr/local/lib)
cp -f /Library/OpenSC/lib/opensc-pkcs11.so /usr/local/lib/opensc-pkcs11.so
cp -f /Library/OpenSC/lib/onepin-opensc-pkcs11.so /usr/local/lib/onepin-opensc-pkcs11.so
# Take care of libopensc.dylib
cp -f /Library/OpenSC/lib/libopensc.6.dylib /usr/local/lib/
ln -sf /usr/local/lib/libopensc.6.dylib /usr/local/lib/libopensc.dylib

# Restore opensc.conf if necessary, and make sure MD5 hash of this file is recorded correctly
if [ -e "/Library/OpenSC/etc/opensc.conf.orig" ]
then
    # File exists, fine. Save the conf to .new
    cp /Library/OpenSC/etc/opensc.conf /Library/OpenSC/etc/opensc.conf.new
else
    # Save the copy of the current config file
    cp /Library/OpenSC/etc/opensc.conf /Library/OpenSC/etc/opensc.conf.orig
fi

if [ -e "/Library/OpenSC/etc/opensc.conf.md5" ]
then
	read cs_fromfile file < "/Library/OpenSC/etc/opensc.conf.md5"
	cs_calculated=$( md5 -q "/Library/OpenSC/etc/opensc.conf")
	if [ "$cs_fromfile" = "$cs_calculated" ]
	then
		mv /Library/OpenSC/etc/opensc.conf.orig /Library/OpenSC/etc/opensc.conf
		md5 -r /Library/OpenSC/etc/opensc.conf  > /Library/OpenSC/etc/opensc.conf.md5
	fi
else
	mv /Library/OpenSC/etc/opensc.conf.orig /Library/OpenSC/etc/opensc.conf
	md5 -r /Library/OpenSC/etc/opensc.conf  > /Library/OpenSC/etc/opensc.conf.md5
fi

# Force symlinks for OpenSC executables to /usr/local/bin directory
#for f in /Library/OpenSC/bin/*
#do
#	ln -sf $f /usr/local/bin/
#done

#if [ -e "/Library/OpenSC/OpenSCTokenApp.app/Contents/PlugIns/OpenSCToken.appex" ]
#then
#	pluginkit -a /Library/OpenSC/OpenSCTokenApp.app/Contents/PlugIns/OpenSCToken.appex
#fi
for f in \
	/Library/OpenSC/bin/* \
	/Library/OpenSC/etc/bash_completion.d/* \
	/Library/OpenSC/share/doc/opensc \
	/Library/OpenSC/share/man/man1/* \
	/Library/OpenSC/share/man/man5/*
do
	a=/Library/OpenSC
	b=/usr/local
	l="$(dirname ${f/$a/$b})"
	mkdir -p $l
	ln -sf $f $l
done

#for f in \
#	/Library/LaunchAgents/pkcs11-register.plist \
#	/Library/LaunchAgents/opensc-notify.plist
#do
#	if [ -e "$f" ]
#	then
#		/bin/launchctl asuser $(id -u "${USER}") /bin/launchctl load "$f"
#	fi
#done

#if [ -e /Applications/OpenSCTokenApp.app/Contents/PlugIns/OpenSCToken.appex ]
#	sudo -u _securityagent pluginkit -a /Applications/OpenSCTokenApp.app/Contents/PlugIns/OpenSCToken.appex
#fi

exit 0
