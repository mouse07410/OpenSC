#!/bin/bash -x


# Provide symlinks for the libraries from /Library/OpenSC/lib to /usr/local/lib
#for f in /Library/OpenSC/*.dylib
#do
#	ln -sf $i /usr/local/lib/
#done
#ln -sf /Library/OpenSC/lib/pkcs11-spy.so /usr/local/lib/

# Usually static library is not built... But if it was built, by all means symlink it...
if [ -e /Library/OpenSC/lib/libopensc.a ]; then
	ln -sf /Library/OpenSC/lib/libopensc.a /usr/local/lib/
fi

# Provide symlinks for man pages
for f in /Library/OpenSC/share/man/man1/*.1
do
	ln -sf $i /usr/local/share/man/man1/
done
for f in /Library/OpenSC/share/man/man5/*.5
do
	ln -sf $i /usr/local/share/man/man5/
done

# Physical copy of the libraries to /usr/local/lib to fix the bug
# in OpenSSH on MacOS that does not allow whitelisting other directories
# (so it refuses to load libraries from /Library/OpenSC, even if they are
# symlink'ed to /usr/local/lib)
cp -f /Library/OpenSC/lib/opensc-pkcs11.so /usr/local/lib/opensc-pkcs11.so
cp -f /Library/OpenSC/lib/onepin-opensc-pkcs11.so /usr/local/lib/onepin-opensc-pkcs11.so
# Take care of libopensc.dylib
cp -f /Library/OpenSC/lib/libopensc.6.dylib /usr/local/lib/
ln -sf /usr/local/lib/libopensc.6.dylib /usr/local/lib/libopensc.dylib

# Restore opensc.conf if necessary, and make sure MD5 hash of this file is recorded correctly
if [ -e "/Library/OpenSC/etc/opensc.conf.orig" ]
then
    # File exists, fine. Save the conf to .new
    cp /Library/OpenSC/etc/opensc.conf /Library/OpenSC/etc/opensc.conf.new
else
    # Save the copy of the current config file
    cp /Library/OpenSC/etc/opensc.conf /Library/OpenSC/etc/opensc.conf.orig
fi

# Force symlinks for OpenSC executables to /usr/local/bin directory
#for f in /Library/OpenSC/bin/*
#do
#	ln -sf $f /usr/local/bin/
#done

#if [ -e "/Library/OpenSC/OpenSCTokenApp.app/Contents/PlugIns/OpenSCToken.appex" ]
#then
#	pluginkit -a /Library/OpenSC/OpenSCTokenApp.app/Contents/PlugIns/OpenSCToken.appex
#fi
# copy libs to /usr/local/lib
cp /Library/OpenSC/lib/opensc-pkcs11.so \
  /Library/OpenSC/lib/onepin-opensc-pkcs11.so \
  /usr/local/lib/

# install opensc.conf if it hasn't been locally modified
# shellcheck disable=SC2043
for f in /Library/OpenSC/etc/opensc.conf; do
  if [ -e "${f}.md5" ]; then
    read -r cs_fromfile _ < "${f}.md5"
    cs_calculated="$(md5 -q "${f}")"
    if [ "$cs_fromfile" != "$cs_calculated" ]; then
      echo "config ${f} was locally modified since last install, skipping" 2>&1
      continue
    fi
  fi
  cp "${f}.orig" "$f"
  md5 -r "$f"  >"${f}.md5"
done

# symlink other files to /usr/local
for f in \
  /Library/OpenSC/bin/* \
  /Library/OpenSC/etc/bash_completion.d/* \
  /Library/OpenSC/share/doc/*
do
  [ -e "$f" ] || continue # keep this or set "shopt -s nullglob"
  a=/Library/OpenSC
  b=/usr/local
  l="${f/$a/$b}" # parameter expansion, returns $f where $a is replaced by $b
  mkdir -p "$(dirname "$l")"
  ln -sf "$f" "$l"
done

# correct past issue where a literal shell glob character was symlinked
# e.g. /usr/local/share/man/man1/* -> /Library/OpenSC/share/man/man1/*
# maybe remove this step post 2022?
for f in \
  '/usr/local/share/man/man1/*' \
  '/usr/local/share/man/man5/*'
do
  [ -L "$f" ] || continue # skip unless $f is a symlink
  t="$(readlink "$f")"
  [ -e "$t" ] && continue # skip if the symlink target actually exists
  a=/usr/local
  b=/Library/OpenSC
  [ "$t" = "${f/$a/$b}" ] || continue # skip unless the target is in the corresponding /Library/OpenSC subdirectory
  # we can now assume that we originally made $f and can safely remove it
  unlink "$f"
done

# register the launch agents
for f in \
  /Library/LaunchAgents/pkcs11-register.plist \
  /Library/LaunchAgents/opensc-notify.plist
do
  [ -e "$f" ] || continue
  /bin/launchctl asuser "$(id -u "$USER")" /bin/launchctl load "$f" || true
done

#if [ -e /Applications/OpenSCTokenApp.app/Contents/PlugIns/OpenSCToken.appex ]
#	sudo -u _securityagent pluginkit -a /Applications/OpenSCTokenApp.app/Contents/PlugIns/OpenSCToken.appex
#fi

exit 0
